name: Deploy Airflow with Terraform

on:
  push:
    branches: "testing-sql-infra"
  workflow_dispatch:
    inputs:
      deployment_target:
        description: "Where to deploy Airflow"
        required: true
        default: "compute_engine"
        type: choice
        options:
          - local
          - compute_engine

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: primordial-veld-450618-n4
      GCP_LOCATION: us-central1
      ARTIFACT_REGISTRY_NAME: airflow-docker-image
      REPO_FORMAT: docker
      DOCKER_IMAGE_NAME: data-pipeline
      DOCKER_IMAGE_TAG: latest
      MACHINE_TYPE: e2-standard-4
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      TF_VAR_gcp_service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Data_Pipeline/tests/requirements-test.txt
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/Data_Pipeline:$(pwd)" >> $GITHUB_ENV
          echo "PYTHONPATH set to $(pwd)/Data_Pipeline:$(pwd)"
      - name: Run Unit Tests
        run: python -m unittest discover -s Data_Pipeline/tests -p "test*.py"

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Update gcloud components
        run: gcloud components update --quiet

      - name: Ensure Artifact Registry
        run: |
          chmod +x scripts/create_or_ensure_artifact_registry.sh
          ./scripts/create_or_ensure_artifact_registry.sh
      - name: Check if Docker Build is Needed
        id: detect-changes
        run: |
          chmod +x scripts/check_docker_build.sh
          ./scripts/check_docker_build.sh
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build & Push Docker Image
        if: steps.detect-changes.outputs.build_required == 'true'
        run: |
          chmod +x scripts/build_and_push.sh
          ./scripts/build_and_push.sh
      # --------- TERRAFORM STEPS ---------
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: infrastructure
        run: terraform init

      - name: Terraform Plan
        run: terraform -chdir=infrastructure plan -var="project_id=${{ env.GCP_PROJECT_ID }}" -var="region=${{ env.GCP_LOCATION }}"

      - name: Import existing resources if any
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          chmod +x scripts/tf_import_all.sh
          ./scripts/tf_import_all.sh

      - name: Terraform Apply
        run: terraform -chdir=infrastructure apply -auto-approve -var="project_id=${{ env.GCP_PROJECT_ID }}" -var="region=${{ env.GCP_LOCATION }}"


      - name: Get Load Balancer IP
        run: |
          LB_IP=$(gcloud compute forwarding-rules list --filter="name:airflow-global-forwarding-rule" --format="value(IPAddress)")
          echo "Airflow UI is available at: http://$LB_IP"
