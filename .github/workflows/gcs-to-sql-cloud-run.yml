name: Deploy to Cloud Run from Storage Bucket

on:
  push:
    branches: [ test_cloud_run ]
  workflow_dispatch:

env:
  PROJECT_ID: primordial-veld-450618-n4
  REGION: us-central1
  SERVICE_NAME: gcs-to-sql-cloud-run
  DEPLOYMENT_BUCKET: utility_cloud_run_functions
  TRIGGER_BUCKET: fully-processed-data
  SERVICE_ACCOUNT: cloud-run@primordial-veld-450618-n4.iam.gserviceaccount.com
  ZIP_FILE_PATH: GCP_Scripts/GCS_to_SQL/gcs_to_sql.zip

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    - name: Authorize Docker push to Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
        
    - name: Upload existing zip to GCS
      run: |
        # Verify the zip file exists
        if [ ! -f "${{ env.ZIP_FILE_PATH }}" ]; then
          echo "Error: Zip file not found at ${{ env.ZIP_FILE_PATH }}"
          exit 1
        fi
        
        # Upload to GCS
        gsutil cp ${{ env.ZIP_FILE_PATH }} gs://${{ env.DEPLOYMENT_BUCKET }}/deployment.zip
        
    - name: Deploy Cloud Run service
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --source=gs://${{ env.DEPLOYMENT_BUCKET }}/deployment.zip \
          --platform=managed \
          --allow-unauthenticated

    - name: Set up Eventarc trigger for Cloud Storage
      run: |
        # Check if trigger exists
        EXISTING_TRIGGER=$(gcloud eventarc triggers list --location=${{ env.REGION }} --filter="name~'storage-trigger-${{ env.SERVICE_NAME }}'" --format="value(name)")
        
        if [ -z "$EXISTING_TRIGGER" ]; then
          # Create new trigger if it doesn't exist
          gcloud eventarc triggers create storage-trigger-${{ env.SERVICE_NAME }} \
            --location=${{ env.REGION }} \
            --destination-run-service=${{ env.SERVICE_NAME }} \
            --destination-run-region=${{ env.REGION }} \
            --event-filters="type=google.cloud.storage.object.v1.finalized" \
            --event-filters="bucket=${{ env.TRIGGER_BUCKET }}" \
            --service-account=${{ env.SERVICE_ACCOUNT }}
        else
          echo "Eventarc trigger already exists, skipping creation"
        fi