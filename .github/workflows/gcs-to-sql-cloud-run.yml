name: GCS Deployment

on:
  push:
    branches: [ test_cloud_run ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CLOUD_RUN_SA_KEY }}'

    - uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_email: ${{ secrets.GCP_CLOUD_RUN_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_CLOUD_RUN_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Create a ZIP file
      run: |
        mkdir cloud_run_files_to_zip
        cp GCP_Scripts/GCS_to_SQL/* cloud_run_files_to_zip/
        zip -r GCS_TO_SQL.zip cloud_run_files_to_zip/
    
    - name: Ensure deployment bucket exists
      run: |
        if ! gsutil ls -b gs://utility_cloud_run_functions/ > /dev/null 2>&1; then
          echo "Creating bucket gs://utility_cloud_run_functions/"
          gsutil mb -p ${{ secrets.GCP_PROJECT_ID }} -l us-central1 gs://utility_cloud_run_functions/
        else
          echo "Bucket gs://utility_cloud_run_functions/ already exists"
        fi

    - name: Deploy via GCS
      run: |
        gsutil cp GCS_TO_SQL.zip gs://utility_cloud_run_functions/

    - name: Deploy Cloud Run Service
      run: |
        gcloud run deploy test-cloud-run-function \
          --source=gs://utility_cloud_run_functions/GCS_TO_SQL.zip \
          --function=hello_gcs \
          --base-image=python311 \
          --region=us-central1 \
          --allow-unauthenticated \
          --concurrency=1 \
          --max-instances=100 \
          --min-instances=0 \
          --memory=512Mi \
          --timeout=60s \
          --set-cloudsql-instances=primordial-veld-450618-n4:us-central1:mlops-sql \
          --cpu=167m \
          --port=8080 

# gcloud run services describe to-sql --platform managed --region us-central1

          # --service-account=
